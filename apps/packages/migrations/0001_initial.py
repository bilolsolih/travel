# Generated by Django 4.2.6 on 2023-10-30 14:40

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0003_feature'),
        ('base', '0003_city_title_en_city_title_ru_city_title_uz_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Rating')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('landmark', models.CharField(blank=True, max_length=256, null=True, verbose_name='Landmark')),
                ('iframe', models.TextField(blank=True, null=True, verbose_name='iFrame')),
                ('latitude', models.CharField(blank=True, max_length=64, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=64, null=True, verbose_name='Longitude')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='accommodations', to='base.city', verbose_name='City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='accommodations', to='base.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Accommodation',
                'verbose_name_plural': 'Accommodations',
            },
        ),
        migrations.CreateModel(
            name='AccommodationFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('icon', models.ImageField(upload_to='images/accommodations/features/', verbose_name='Icon')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Is paid?')),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
            },
        ),
        migrations.CreateModel(
            name='AccommodationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('picture', models.ImageField(upload_to='images/accommodations/accommodation_types/', verbose_name='Picture')),
            ],
            options={
                'verbose_name': 'Accommodation type',
                'verbose_name_plural': 'Accommodation types',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('address_uz', models.CharField(max_length=256, null=True, verbose_name='Address')),
                ('address_ru', models.CharField(max_length=256, null=True, verbose_name='Address')),
                ('address_en', models.CharField(max_length=256, null=True, verbose_name='Address')),
                ('landmark', models.CharField(blank=True, max_length=256, null=True, verbose_name='Landmark')),
                ('landmark_uz', models.CharField(blank=True, max_length=256, null=True, verbose_name='Landmark')),
                ('landmark_ru', models.CharField(blank=True, max_length=256, null=True, verbose_name='Landmark')),
                ('landmark_en', models.CharField(blank=True, max_length=256, null=True, verbose_name='Landmark')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_uz', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('iframe', models.TextField(blank=True, null=True, verbose_name='iFrame')),
                ('latitude', models.CharField(blank=True, max_length=64, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, max_length=64, null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('day_number', models.PositiveIntegerField(verbose_name='Day number')),
                ('activities', models.ManyToManyField(related_name='days', to='packages.activity', verbose_name='Activities')),
            ],
            options={
                'verbose_name': 'Day',
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('picture', models.ImageField(upload_to='images/packages/packages/%Y/%m/', verbose_name='Picture')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active status')),
                ('core_activities', models.ManyToManyField(blank=True, related_name='packages', to='packages.activity', verbose_name='Core activities')),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='PackageFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_uz', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('icon', models.ImageField(upload_to='images/packages/features/', verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Plan feature',
                'verbose_name_plural': 'Plan features',
            },
        ),
        migrations.CreateModel(
            name='PlanType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Plan type',
                'verbose_name_plural': 'Plan types',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='packages.package', verbose_name='Package')),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
            },
        ),
        migrations.AddField(
            model_name='package',
            name='core_features',
            field=models.ManyToManyField(blank=True, related_name='packages', to='packages.packagefeature', verbose_name='Core features'),
        ),
        migrations.AddField(
            model_name='package',
            name='popular_places',
            field=models.ManyToManyField(blank=True, related_name='packages', to='places.popularplace', verbose_name='Popular places'),
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('due_time', models.TimeField(verbose_name='Flight time')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flights', to='packages.day', verbose_name='Day')),
                ('from_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_flights', to='base.city', verbose_name='From what city?')),
                ('to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_flights', to='base.city', verbose_name='To what city?')),
            ],
            options={
                'verbose_name': 'Flight',
                'verbose_name_plural': 'FLights',
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duration in days')),
                ('accommodation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='destinations', to='packages.accommodation', verbose_name='Accommodation')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='packages', to='base.city', verbose_name='City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='packages', to='base.country', verbose_name='Country')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='packages.package', verbose_name='Package')),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
            },
        ),
        migrations.AddField(
            model_name='day',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='packages.package', verbose_name='Package'),
        ),
        migrations.CreateModel(
            name='AccommodationPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('picture', models.ImageField(upload_to='images/accommodations/destinations/%Y/%m/%d/', verbose_name='Picture')),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pictures', to='packages.accommodation', verbose_name='Accommodation')),
            ],
            options={
                'verbose_name': 'Accommodation type',
                'verbose_name_plural': 'Accommodation types',
            },
        ),
        migrations.AddField(
            model_name='accommodation',
            name='features',
            field=models.ManyToManyField(blank=True, related_name='accommodations', to='packages.accommodationfeature'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accommodations', to='packages.accommodationtype', verbose_name='Type'),
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(verbose_name='Price in USD ($)')),
                ('discount', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('discount_expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='Discount expiry date')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_uz', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('activities', models.ManyToManyField(blank=True, related_name='plans', to='packages.activity', verbose_name='Plan-specific activities')),
                ('features', models.ManyToManyField(blank=True, related_name='plans', to='packages.packagefeature', verbose_name='Features')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='packages.package', verbose_name='Package')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plans', to='packages.plantype', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
                'unique_together': {('package', 'type')},
            },
        ),
    ]
